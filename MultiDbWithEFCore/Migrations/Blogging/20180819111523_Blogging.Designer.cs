// <auto-generated />
using BinZone.Sample.EF.MultiDB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MultiDbWithEFCore.Migrations.Blogging
{
    [DbContext(typeof(BloggingContext))]
    [Migration("20180819111523_Blogging")]
    partial class Blogging
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BinZone.Sample.EF.MultiDB.Entities.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Rating");

                    b.Property<string>("Url");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new { BlogId = 1, Rating = 0, Url = "http://sample.com" }
                    );
                });

            modelBuilder.Entity("BinZone.Sample.EF.MultiDB.Entities.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BlogId");

                    b.Property<string>("Content");

                    b.Property<string>("Title");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");

                    b.HasData(
                        new { PostId = 1, BlogId = 1, Content = "Test 1", Title = "First post" },
                        new { PostId = 2, BlogId = 1, Content = "Test 2", Title = "Second post" }
                    );
                });

            modelBuilder.Entity("BinZone.Sample.EF.MultiDB.Entities.Post", b =>
                {
                    b.HasOne("BinZone.Sample.EF.MultiDB.Entities.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
